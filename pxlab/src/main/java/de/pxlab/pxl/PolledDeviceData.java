package de.pxlab.pxl;

import de.pxlab.util.StringExt;

/**
 * Data generated by a PolledDevice.
 * 
 * @version 0.1.0
 * @see PolledDevice
 */
public class PolledDeviceData {
	/** The device which generated this data. */
	private PolledDevice source;
	/**
	 * The index of the first button which has changed its state since the last
	 * polling cycle. Is (-1) if no button has changed its state.
	 */
	private int changedButtonIndex;
	/** The device button states (0=open, 1=pressed). */
	private boolean[] buttonStates;
	/**
	 * The index of the first directional which has changed its state since the
	 * last polling cycle. Is (-1) if no directional has changed its state.
	 */
	private int changedDirectionalIndex;
	/** The directional states (0=active, 1=centered). */
	private boolean[] directionalStates;
	/** The current direction values for every directional of the device. */
	private int[] directions;
	/** The current delta values for every axis of the device. */
	private double[] axisDeltas;
	/** The time when the data have been read. */
	private long when;

	/**
	 * Create a new data object.
	 * 
	 * @param s
	 *            the device which generated the data.
	 * @param cbi
	 *            the index of the button which has changed its state at the
	 *            last polling cycle.
	 * @param b
	 *            the array of button states.
	 * @param cdi
	 *            the index of the directional which has changed its state at
	 *            the last polling cycle.
	 * @param ds
	 *            the array of directional states.
	 * @param d
	 *            the array of direction values.
	 * @param a
	 *            the array of axis values.
	 * @param t
	 *            the time in nanoseconds when the last polling cycle was
	 *            finished.
	 */
	public PolledDeviceData(PolledDevice s, int cbi, boolean[] b, int cdi,
			boolean[] ds, int[] d, double[] a, long t) {
		source = s;
		changedButtonIndex = cbi;
		buttonStates = b;
		changedDirectionalIndex = cdi;
		directionalStates = ds;
		directions = d;
		axisDeltas = a;
		when = t;
	}

	/** Get the device which generated this data. */
	public PolledDevice getSource() {
		return source;
	}

	/**
	 * Get the index of the first button which has changed its state since the
	 * last polling cycle. Is (-1) if no button has changed its state.
	 */
	public int getChangedButtonIndex() {
		return changedButtonIndex;
	}

	/** Get the device button states (0=open, 1=pressed). */
	public boolean[] getButtonStates() {
		return buttonStates;
	}

	/**
	 * Get the index of the first directional which has changed its state since
	 * the last polling cycle. Is (-1) if no directional has changed its state.
	 */
	public int getChangedDirectionalIndex() {
		return changedDirectionalIndex;
	}

	/** Get the directional states (0=active, 1=centered). */
	public boolean[] getDirectionalStates() {
		return directionalStates;
	}

	/** Get the current direction values for every directional of the device. */
	public int[] getDirections() {
		return directions;
	}

	/** Get the current delta values for every axis of the device. */
	public double[] getAxisDeltas() {
		return axisDeltas;
	}

	/** Get the time in nanoseconds when this data object had been generated. */
	public long getWhen() {
		return when;
	}

	public String toString() {
		StringBuffer b = new StringBuffer(200);
		b.append("Data source:        " + source.getName() + "\n");
		b.append("Button states:      " + StringExt.valueOf(buttonStates)
				+ "\n");
		b.append("Directional States: " + StringExt.valueOf(directionalStates)
				+ "\n");
		b.append("Directions:         " + StringExt.valueOf(directions) + "\n");
		b.append("Axis deltas:        " + StringExt.valueOf(axisDeltas) + "\n");
		b.append("Time:               " + when + "\n");
		return b.toString();
	}
}
