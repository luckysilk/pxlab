Experiment()
{
  Context()
  {
    AssignmentGroup()
    {
      ExperimentName = "Brief Implicit Associations Test";
      SubjectCode = "pxlab";
      new aggettivi_positivi = "Felicità Gioia Amicizia Allegria";
      new cittadini_settentrionali = "Milanesi Torinesi Veneziani Genovesi";
      new cittadini_meridionali = "Napoletani Palermitani Baresi Catanzaresi";
      new cat_cittadini_settentrionali = "SETTENTRIONALI";
      new cat_cittadini_meridionali = "MERIDIONALI";
      new cat_aggettivi_positivi = "POSITIVI";
      new cat_aggettivi_negativi = "NEGATIVI";
      new categoria1 = "categoria1";
      new categoria2 = "categoria2";
      new descrizione_categoria1 = "des_categoria1";
      new descrizione_categoria2 = "des_categoria2";
      new categories = 0;
      new categories1 = 0;
      new item = 0;
      new col = 0;
      new agcol = yellow();
      new catcol = cyan();
      new cat_cittadini_settentrionaliPosition = 0;
      new cat_cittadini_meridionaliPosition = 0;
      new cat_aggettivi_positiviPosition = 0;
      new cat_aggettivi_negativiPosition = 0;
      new testo1 = 0;
      SkipBoundingBlockDisplays = 0;
    }
    Session()
    {
      Instruction()
      {
        Text = ["In questa sezione farai un compito per valutare la tua capacità di categorizzare degli stimoli nella maniera più  VELOCE ED ACCURATA possibile:", "termini %cat_aggettivi_positivi%, termini %cat_aggettivi_negativi%, abitanti di città %cat_cittadini_settentrionali% o abitanti di città %cat_cittadini_meridionali%.", "Per svolgere la prova il più accuratamente possibile posiziona l\'indice della mano Sinistra sul tasto E  e quello della mano Destra sul tasto I.", "Dovrai premere il tasto I o il tasto E a seconda di quale termine comparirà. Le prime due prove che vedrai servono a renderti familiare il tipo di compito da svolgere.", "Ricorda: il tuo compito è quello di  provare a classificare gli stimoli che riceverai il più Velocemente ed Accuratamente possibile.", "Se dovessi andare troppo lentemente o fare troppi errori la prova sarà invalidata. Non preoccuparti per qualche errore occasionale. Se farai un errore apparirà una X.", "Correggi rapidamente l\'errore premendo il tasto corretto (E o I).", " ", "Per continuare premi la barra spaziatrice."];
        Alignment = de.pxlab.pxl.AlignmentCodes.CENTER;
        FontFamily = "Arial";
        FontSize = 30;
      }
    }
    SessionEnd()
    {
      SessionEndMessage()
      {
        Text = "FINE!";
      }
    }
    //**************PARTE DI APPRENDIMENTO***********************************

    Block( categoria1, descrizione_categoria1, categoria2, descrizione_categoria2, cat_cittadini_settentrionaliPosition, cat_cittadini_meridionaliPosition, cat_aggettivi_positiviPosition, cat_aggettivi_negativiPosition);
    Block:A()
    {
      BlockStartMessage()
      {
        Text = ["Premi il tasto I ogni volta che appare un termine della categoria %cat_aggettivi_positivi% sopra indicata. Premi il tasto E  per ogni altro termine.", " ", "Svolgi il compito il più velocemente possibile", " ", "Premi la barra spaziatrice per incominciare."];
        Alignment = de.pxlab.pxl.AlignmentCodes.CENTER;
        FontFamily = "Arial";
        FontSize = 30;
      }
    }
    Block:APP( categoria1, cat_aggettivi_positiviPosition, cat_aggettivi_negativiPosition);
    Block:B()
    {
      BlockStartMessage()
      {
        Text = ["Premi il tasto I ogni volta che appare un termine delle categorie %cat_aggettivi_positivi% o %cat_cittadini_settentrionali% sopra indicate. Premi il tasto E  per tutti gli altri termini.", " ", "Svolgi il compito il più velocemente possibile", " ", "Premi la barra spaziatrice per incominciare."];
        Alignment = de.pxlab.pxl.AlignmentCodes.CENTER;
        FontFamily = "Arial";
        FontSize = 30;
      }
      TextParagraph:cat1()
      {
        Color = yellow();
        ReferencePoint = de.pxlab.pxl.PositionReferenceCodes.MIDDLE_LEFT;
        Text = "prova";
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        FontFamily = "Arial";
        FontSize = 30;
      }
    }
    Block:C()
    {
      BlockStartMessage()
      {
        Text = ["Premi il tasto I ogni volta che appare un termine delle categorie %cat_aggettivi_positivi% o %cat_cittadini_meridionali% sopra indicate. Premi il tasto E  per tutti gli altri termini.", " ", "Svolgi il compito il più velocemente possibile", " ", "Premi la barra spaziatrice per incominciare."];
        Alignment = de.pxlab.pxl.AlignmentCodes.CENTER;
        FontFamily = "Arial";
        FontSize = 30;
      }
    }
    Trial:AP( item, Feedback.CorrectCode, Feedback.Response, Feedback.ResponseTime, Message.ResponseTime)
    {
      TextParagraph:cat1()
      {
        LocationX = 0;
        LocationY = -300;
        Color = yellow();
        ReferencePoint = de.pxlab.pxl.PositionReferenceCodes.TOP_CENTER;
        Alignment = de.pxlab.pxl.AlignmentCodes.CENTER;
        Text = categoria1;
        Timer = de.pxlab.pxl.TimerCodes.NO_TIMER;
        FontFamily = "Arial";
        FontSize = 30;
      }
      Message()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.JOIN;
        Text = item;
        Color = yellow();
        Timer = de.pxlab.pxl.TimerCodes.RESPONSE_TIMER;
        ResponseSet = [de.pxlab.pxl.KeyCodes.E_KEY, de.pxlab.pxl.KeyCodes.I_KEY];
        FontFamily = "Arial";
        FontSize = 70;
      }
      Feedback()
      {
        ResponseParameter = Trial:AP.Message.ResponseCode;
        Evaluation = CHECK_NOGO;
        FalseText = "X";
        Color = red();
        Timer = de.pxlab.pxl.TimerCodes.RESPONSE_TIMER;
        ResponseSet = (Trial:AP.Feedback.CorrectCode==0)? de.pxlab.pxl.KeyCodes.E_KEY: de.pxlab.pxl.KeyCodes.I_KEY;
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        FontSize = 72;
        LocationY = 280;
      }
      ClearScreen()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    Trial:T( item, col, Feedback.CorrectCode, Feedback.Response, Feedback.ResponseTime, Message.ResponseTime)
    {
      TextParagraph:A()
      {
        Overlay = de.pxlab.pxl.OverlayCodes.DISPLAY_LIST;
        LocationX = 0;
        LocationY = -400;
        Color = cyan();
        ReferencePoint = de.pxlab.pxl.PositionReferenceCodes.BASE_CENTER;
        Alignment = de.pxlab.pxl.AlignmentCodes.CENTER;
        Text = categoria1;
        FontFamily = "Arial";
        FontSize = 30;
      }
      Message()
      {
        Text = item;
        Color = col;
        Timer = de.pxlab.pxl.TimerCodes.RESPONSE_TIMER;
        ResponseSet = [de.pxlab.pxl.KeyCodes.E_KEY, de.pxlab.pxl.KeyCodes.I_KEY];
        FontFamily = "Arial";
        FontSize = 70;
      }
      Feedback()
      {
        ResponseParameter = Trial:T.Message.ResponseCode;
        Evaluation = CHECK_NOGO;
        FalseText = "X";
        Color = red();
        Timer = de.pxlab.pxl.TimerCodes.RESPONSE_TIMER;
        ResponseSet = (Trial:T.Feedback.CorrectCode==0)? de.pxlab.pxl.KeyCodes.E_KEY: de.pxlab.pxl.KeyCodes.I_KEY;
        Overlay = de.pxlab.pxl.OverlayCodes.TRANSPARENT;
        FontSize = 72;
        LocationY = 280;
      }
      ClearScreen()
      {
        Timer = de.pxlab.pxl.TimerCodes.CLOCK_TIMER;
        Duration = 500;
      }
    }
    // Command line assignments

    AssignmentGroup();
    // Command line assignments

    AssignmentGroup();
    // Session dependent assignments

    AssignmentGroup()
    {
      SubjectCode = "pxlab";
      RemainingSessionGroup = 0;
      RemainingSessionRuns = 0;
      Date = "23/07/12 9.04.22 CEST";
      PXLabVersion = "2.1.19";
      PrimaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      PrimaryScreen.ColorDeviceDACRange = 255;
      PrimaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      PrimaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      PrimaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      PrimaryScreen.RedGamma = [2.4, 1];
      PrimaryScreen.GreenGamma = [2.4, 1];
      PrimaryScreen.BlueGamma = [2.4, 1];
      SecondaryScreen.ColorDevice = de.pxlab.pxl.ColorDeviceTransformCodes.SONY_TRINITRON;
      SecondaryScreen.ColorDeviceDACRange = 255;
      SecondaryScreen.RedPrimary = [21.26, 0.621, 0.34];
      SecondaryScreen.GreenPrimary = [71.52, 0.281, 0.606];
      SecondaryScreen.BluePrimary = [7.22, 0.152, 0.067];
      SecondaryScreen.RedGamma = [2.4, 1];
      SecondaryScreen.GreenGamma = [2.4, 1];
      SecondaryScreen.BlueGamma = [2.4, 1];
      DeviceWhitePoint = [100, 0.3065, 0.3468];
      CIEWhitePoint = 0;
    }
  }
  Procedure()
  {
    Session()
    {
      Block:B();
      Block( "%cat_cittadini_settentrionali%", "%cittadini_settentrionali%", "%cat_aggettivi_positivi%", "%aggettivi_positivi%", 1, 0, 1, 0)
      {
        Trial:T( "Felicit�", agcol, cat_aggettivi_positiviPosition, 1, 494.1053, 1676.9967);
        Trial:T( "Palermitani", catcol, cat_cittadini_meridionaliPosition, 1, 846.6341, 115.6783);
        Trial:T( "Allegria", agcol, cat_aggettivi_positiviPosition, 1, 26670.2056, 452.094);
        Trial:T( "Morte", agcol, cat_aggettivi_negativiPosition, 1, 18943.1026, 332.1012);
        Trial:T( "Baresi", catcol, cat_cittadini_meridionaliPosition, 0, 0, 68.5752);
        Trial:T( "Guerra", agcol, cat_aggettivi_negativiPosition, 1, 366.8091, 254.4295);
        Trial:T( "Napoletani", catcol, cat_cittadini_meridionaliPosition, 1, 350.1414, 517.7106);
        Trial:T( "Violenza", agcol, cat_aggettivi_negativiPosition, 0, 0, 452.0163);
        Trial:T( "Milanesi", catcol, cat_cittadini_settentrionaliPosition, 0, 0, 446.9152);
        Trial:T( "Odio", agcol, cat_aggettivi_negativiPosition, 0, 0, 561.0786);
        Trial:T( "Catanzaresi", catcol, cat_cittadini_meridionaliPosition, 0, 0, 481.3461);
        Trial:T( "Amicizia", agcol, cat_aggettivi_positiviPosition, 0, 0, 335.975);
        Trial:T( "Veneziani", catcol, cat_cittadini_settentrionaliPosition, 0, 0, 370.0343);
        Trial:T( "Genovesi", catcol, cat_cittadini_settentrionaliPosition, 1, 365.9733, 560.9924);
        Trial:T( "Gioia", agcol, cat_aggettivi_positiviPosition, 0, 0, 709.7286);
        Trial:T( "Torinesi", catcol, cat_cittadini_settentrionaliPosition, 0, 0, 720.4505);
      }
      Block:C();
      Block( "%cat_cittadini_meridionali%", "%cittadini_meridionali%", "%cat_aggettivi_positivi%", "%aggettivi_positivi%", 0, 1, 1, 0)
      {
        Trial:T( "Napoletani", catcol, cat_cittadini_meridionaliPosition, 1, 398.4576, 810.2331);
        Trial:T( "Palermitani", catcol, cat_cittadini_meridionaliPosition, 0, 0, 726.1221);
        Trial:T( "Amicizia", agcol, cat_aggettivi_positiviPosition, 1, 366.2227, 241.7754);
        Trial:T( "Catanzaresi", catcol, cat_cittadini_meridionaliPosition, 0, 0, 436.1872);
        Trial:T( "Morte", agcol, cat_aggettivi_negativiPosition, 0, 0, 449.6569);
        Trial:T( "Baresi", catcol, cat_cittadini_meridionaliPosition, 1, 318.6707, 401.229);
        Trial:T( "Torinesi", catcol, cat_cittadini_settentrionaliPosition, 0, 0, 646.3622);
        Trial:T( "Guerra", agcol, cat_aggettivi_negativiPosition, 0, 0, 701.1398);
        Trial:T( "Genovesi", catcol, cat_cittadini_settentrionaliPosition, 0, 0, 384.616);
        Trial:T( "Gioia", agcol, cat_aggettivi_positiviPosition, 0, 0, 418.1087);
        Trial:T( "Odio", agcol, cat_aggettivi_negativiPosition, 0, 0, 417.6277);
        Trial:T( "Veneziani", catcol, cat_cittadini_settentrionaliPosition, 1, 366.6441, 144.5005);
        Trial:T( "Allegria", agcol, cat_aggettivi_positiviPosition, 1, 302.1706, 262.3637);
        Trial:T( "Violenza", agcol, cat_aggettivi_negativiPosition, 1, 302.5267, 245.8913);
        Trial:T( "Milanesi", catcol, cat_cittadini_settentrionaliPosition, 0, 0, 230.0656);
        Trial:T( "Felicit�", agcol, cat_aggettivi_positiviPosition, 0, 0, 12.1796);
      }
    }
  }
}
